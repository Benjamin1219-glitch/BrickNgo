<!DOCTYPE html>
<html>
<head>
    <title>Cart Debug - BRICKNGO</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; }
        h1 { color: #667eea; }
        .status { padding: 10px; margin: 10px 0; border-radius: 4px; }
        .success { background: #d4edda; color: #155724; }
        .error { background: #f8d7da; color: #721c24; }
        .info { background: #d1ecf1; color: #0c5460; }
        pre { background: #f8f9fa; padding: 15px; border-radius: 4px; overflow-x: auto; }
        button { padding: 10px 20px; background: #667eea; color: white; border: none; border-radius: 4px; cursor: pointer; margin: 5px; }
        button:hover { background: #5568d3; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üõí Cart Debugging Tool</h1>
        
        <div id="status"></div>
        
        <div>
            <button onclick="checkAuth()">1. Check Authentication</button>
            <button onclick="checkCart()">2. Check Cart</button>
            <button onclick="addTestProduct()">3. Add Test Product</button>
            <button onclick="viewCart()">4. View Cart Details</button>
        </div>
        
        <div id="output"></div>
        
        <div style="margin-top: 20px;">
            <a href="/shop" style="color: #667eea;">‚Üê Back to Shop</a> | 
            <a href="/cart" style="color: #667eea;">View Cart</a> | 
            <a href="/checkout" style="color: #667eea;">Go to Checkout</a>
        </div>
    </div>

    <script>
        const API_BASE = '/api';
        
        function showStatus(message, type = 'info') {
            const statusDiv = document.getElementById('status');
            statusDiv.className = 'status ' + type;
            statusDiv.innerHTML = message;
        }
        
        function showOutput(title, data) {
            const output = document.getElementById('output');
            output.innerHTML = `
                <h3>${title}</h3>
                <pre>${JSON.stringify(data, null, 2)}</pre>
            `;
        }
        
        async function checkAuth() {
            try {
                showStatus('Checking authentication...', 'info');
                const response = await fetch(`${API_BASE}/auth/me`, { credentials: 'include' });
                
                if (response.ok) {
                    const data = await response.json();
                    showStatus('‚úÖ Authenticated as: ' + data.user.name, 'success');
                    showOutput('User Data:', data);
                } else {
                    showStatus('‚ùå Not authenticated. Please login first.', 'error');
                    showOutput('Response:', { status: response.status, statusText: response.statusText });
                }
            } catch (error) {
                showStatus('‚ùå Error: ' + error.message, 'error');
            }
        }
        
        async function checkCart() {
            try {
                showStatus('Fetching cart...', 'info');
                const response = await fetch(`${API_BASE}/cart`, { credentials: 'include' });
                
                if (response.ok) {
                    const data = await response.json();
                    const itemCount = data.cart?.items?.length || 0;
                    const total = data.cart?.total || 0;
                    
                    if (itemCount === 0) {
                        showStatus(`‚ö†Ô∏è Cart is empty (0 items, ‚Çπ${total})`, 'error');
                    } else {
                        showStatus(`‚úÖ Cart has ${itemCount} items, Total: ‚Çπ${total}`, 'success');
                    }
                    showOutput('Cart Data:', data);
                } else {
                    showStatus('‚ùå Failed to fetch cart: ' + response.status, 'error');
                    const errorData = await response.json().catch(() => ({}));
                    showOutput('Error Response:', errorData);
                }
            } catch (error) {
                showStatus('‚ùå Error: ' + error.message, 'error');
            }
        }
        
        async function addTestProduct() {
            try {
                showStatus('Adding test product to cart...', 'info');
                
                // Get first product from database
                const productsRes = await fetch(`${API_BASE}/products?limit=1`, { credentials: 'include' });
                if (!productsRes.ok) {
                    throw new Error('Failed to fetch products');
                }
                
                const productsData = await productsRes.json();
                if (!productsData.products || productsData.products.length === 0) {
                    throw new Error('No products found in database');
                }
                
                const product = productsData.products[0];
                
                // Add to cart
                const response = await fetch(`${API_BASE}/cart/add`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include',
                    body: JSON.stringify({ 
                        productId: product._id, 
                        quantity: 1 
                    })
                });
                
                if (response.ok) {
                    const data = await response.json();
                    showStatus(`‚úÖ Added "${product.name}" to cart!`, 'success');
                    showOutput('Add to Cart Response:', data);
                } else {
                    const errorData = await response.json().catch(() => ({}));
                    showStatus('‚ùå Failed to add product: ' + (errorData.message || response.statusText), 'error');
                    showOutput('Error:', errorData);
                }
            } catch (error) {
                showStatus('‚ùå Error: ' + error.message, 'error');
            }
        }
        
        async function viewCart() {
            try {
                showStatus('Loading cart details...', 'info');
                const response = await fetch(`${API_BASE}/cart`, { credentials: 'include' });
                
                if (response.ok) {
                    const data = await response.json();
                    showOutput('Complete Cart Data:', data);
                    
                    if (data.cart && data.cart.items && data.cart.items.length > 0) {
                        showStatus(`‚úÖ Cart loaded: ${data.cart.items.length} items`, 'success');
                        
                        // Show items list
                        const itemsList = data.cart.items.map((item, index) => {
                            return `Item ${index + 1}: ${item.product?.name || 'Unknown'} - Qty: ${item.quantity} - ‚Çπ${item.product?.price || 0}`;
                        }).join('<br>');
                        
                        document.getElementById('output').innerHTML += `
                            <h4>Cart Items:</h4>
                            <div style="background: #f8f9fa; padding: 15px; border-radius: 4px;">
                                ${itemsList}
                            </div>
                        `;
                    } else {
                        showStatus('‚ö†Ô∏è Cart is empty', 'error');
                    }
                } else {
                    showStatus('‚ùå Failed to load cart', 'error');
                }
            } catch (error) {
                showStatus('‚ùå Error: ' + error.message, 'error');
            }
        }
        
        // Auto-check on load
        window.onload = async () => {
            await checkAuth();
            setTimeout(checkCart, 500);
        };
    </script>
</body>
</html>
